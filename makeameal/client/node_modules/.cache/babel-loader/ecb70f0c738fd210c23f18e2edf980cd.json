{"ast":null,"code":"var _jsxFileName = \"/Users/jinxlin/Desktop/hunter2021spring/summer499/makeameal/makeameal/client/src/search.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const [ingredientName, setIngredientName] = useState(\"\");\n  const [matchedRecipes, setMatchedRecipes] = useState([]);\n\n  const submitIngredient = async e => {\n    e.preventDefault();\n    await axios.post('http://localhost:3001/api/post', {\n      ingredientName: ingredientName\n    }).then(response => setMatchedRecipes(response.data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"search_form\",\n      onSubmit: submitIngredient,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"type your ingredient\",\n        name: \"ingredientName\",\n        onChange: e => {\n          //console.log(e.target.value)\n          setIngredientName(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-list-container\",\n      children: matchedRecipes.map(val => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: val.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Ingredient:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 38\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: val.ingredients\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 59\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Directions:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 38\n              }, this), \" \", val.directions]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Your ingredients: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 38\n              }, this), \" \", val.ingredients_string]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this)\n        }, val.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 13\n  }, this); //})\n};\n\n_s(Search, \"675+atQsXgJBsgYTZ3QweoJ82Hg=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/jinxlin/Desktop/hunter2021spring/summer499/makeameal/makeameal/client/src/search.js"],"names":["axios","useState","Search","ingredientName","setIngredientName","matchedRecipes","setMatchedRecipes","submitIngredient","e","preventDefault","post","then","response","data","target","value","map","val","title","ingredients","directions","ingredients_string","id"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCH,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACI,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC,EAAD,CAApD;;AAGA,QAAMM,gBAAgB,GAAG,MAAOC,CAAP,IAAa;AAClCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMT,KAAK,CAACU,IAAN,CAAW,gCAAX,EAA6C;AAC/CP,MAAAA,cAAc,EAAEA;AAD+B,KAA7C,EAEHQ,IAFG,CAGDC,QAAD,IAAcN,iBAAiB,CAACM,QAAQ,CAACC,IAAV,CAH7B,CAAN;AAKH,GAPD;;AAUI,sBACI;AAAA,4BACA;AAAM,MAAA,SAAS,EAAG,aAAlB;AAAgC,MAAA,QAAQ,EAAEN,gBAA1C;AAAA,8BAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,sBAFhB;AAGI,QAAA,IAAI,EAAC,gBAHT;AAII,QAAA,QAAQ,EAAIC,CAAD,IAAM;AACb;AAEAJ,UAAAA,iBAAiB,CAACI,CAAC,CAACM,MAAF,CAASC,KAAV,CAAjB;AACH;AARL;AAAA;AAAA;AAAA;AAAA,cAFJ,eAaI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA,+BAAsB;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAAtB;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAiBI;AAAK,MAAA,SAAS,EAAG,uBAAjB;AAAA,gBACCV,cAAc,CAACW,GAAf,CAAoBC,GAAD,IAAO;AAEvB,4BACI;AAAA,iCACI;AAAA,oCACI;AAAA,qCAAK;AAAA,0BAAKA,GAAG,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,sCAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAL,oBAA0B;AAAA,0BAAOD,GAAG,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,sBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,sCAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAL,OAA2BF,GAAG,CAACG,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA,sCAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAL,OAAkCH,GAAG,CAACI,kBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,WAAUJ,GAAG,CAACK,EAAd;AAAA;AAAA;AAAA;AAAA,gBADJ;AAYH,OAdA;AADD;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAfa,CAuDjB;AAGH,CA1DD;;GAAMpB,M;;KAAAA,M;AA4DN,eAAeA,MAAf","sourcesContent":["import \"./App.css\";\nimport axios from \"axios\";\nimport {useState} from \"react\";\n\n\nconst Search = () => {\n    const [ingredientName, setIngredientName] = useState(\"\");\n    const [matchedRecipes, setMatchedRecipes] = useState([]);\n\n   \n    const submitIngredient = async (e) => {\n        e.preventDefault();\n        await axios.post('http://localhost:3001/api/post', {\n            ingredientName: ingredientName\n        }).then(\n            (response) => setMatchedRecipes(response.data)\n            )\n    }\n  \n    \n        return(\n            <div>\n            <form className = \"search_form\" onSubmit={submitIngredient}>\n                \n                <input\n                    type=\"text\"\n                    placeholder=\"type your ingredient\"\n                    name=\"ingredientName\"\n                    onChange={ (e)=> {\n                        //console.log(e.target.value)\n                        \n                        setIngredientName(e.target.value)\n                    }}\n                    \n                />\n                <button type=\"submit\"><i className=\"fa fa-search\"></i></button>\n                </form>\n\n                <div className = \"result-list-container\">\n                {matchedRecipes.map((val)=>{\n                    \n                    return(\n                        <div key={val.id}>\n                            <ul >\n                                <li ><h2>{val.title}</h2></li>\n                                <li ><h4>Ingredient:</h4> <span>{val.ingredients}</span></li>\n                                <li ><h4>Directions:</h4> {val.directions}</li>\n                                <li ><h4>Your ingredients: </h4> {val.ingredients_string}</li>\n                            </ul>\n                        </div>\n                    )\n                    \n                    \n                })}\n                </div>\n           </div>\n           \n        );\n\n    \n    //})\n   \n    \n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}