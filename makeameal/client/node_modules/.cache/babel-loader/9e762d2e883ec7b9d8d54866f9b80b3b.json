{"ast":null,"code":"var _jsxFileName = \"/Users/jinxlin/Desktop/hunter2021spring/summer499/makeameal/makeameal/makeameal/client/src/search.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const [ingredientName, setIngredientName] = useState(\"\");\n  const [matchedRecipes, setMatchedRecipes] = useState([]); //added code from here\n\n  let ing = \"\";\n  let ingredientArr = \"\";\n\n  const userIngredientList = user_ingredient => {\n    ingredientArr = user_ingredient;\n    console.log(ingredientArr);\n  }; //end here\n\n\n  const submitIngredient = async e => {\n    e.preventDefault();\n    await axios.post('http://localhost:3001/api/post', {\n      ingredientName: ingredientName\n    }).then(response => setMatchedRecipes(response.data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"search_form\",\n    onSubmit: submitIngredient,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Search Bar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"type your ingredient\",\n      name: \"ingredientName\",\n      onChange: e => {\n        //console.log(e.target.value)\n        ing = e.target.value;\n        setIngredientName(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: userIngredientList(ing),\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: ingredientArr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), matchedRecipes.map(val => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Title: \", val.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Ingredient: \", val.ingredients]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Directions: \", val.directions]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Ingredient string: \", val.ingredients_string]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this)\n      }, val.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }, this); //})\n};\n\n_s(Search, \"675+atQsXgJBsgYTZ3QweoJ82Hg=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/jinxlin/Desktop/hunter2021spring/summer499/makeameal/makeameal/makeameal/client/src/search.js"],"names":["axios","useState","Search","ingredientName","setIngredientName","matchedRecipes","setMatchedRecipes","ing","ingredientArr","userIngredientList","user_ingredient","console","log","submitIngredient","e","preventDefault","post","then","response","data","target","value","map","val","title","ingredients","directions","ingredients_string","id"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCH,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACI,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC,EAAD,CAApD,CAFiB,CAIjB;;AACA,MAAIM,GAAG,GAAG,EAAV;AACA,MAAIC,aAAa,GAAG,EAApB;;AACA,QAAMC,kBAAkB,GAAIC,eAAD,IAAqB;AAC5CF,IAAAA,aAAa,GAAGE,eAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAZ;AACH,GAHD,CAPiB,CAWjB;;;AAGA,QAAMK,gBAAgB,GAAG,MAAOC,CAAP,IAAa;AAClCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMf,KAAK,CAACgB,IAAN,CAAW,gCAAX,EAA6C;AAC/Cb,MAAAA,cAAc,EAAEA;AAD+B,KAA7C,EAEHc,IAFG,CAGDC,QAAD,IAAcZ,iBAAiB,CAACY,QAAQ,CAACC,IAAV,CAH7B,CAAN;AAKH,GAPD;;AAUI,sBACI;AAAM,IAAA,SAAS,EAAG,aAAlB;AAAgC,IAAA,QAAQ,EAAEN,gBAA1C;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,sBAFhB;AAGI,MAAA,IAAI,EAAC,gBAHT;AAII,MAAA,QAAQ,EAAIC,CAAD,IAAM;AACb;AACAP,QAAAA,GAAG,GAAGO,CAAC,CAACM,MAAF,CAASC,KAAf;AACAjB,QAAAA,iBAAiB,CAACU,CAAC,CAACM,MAAF,CAASC,KAAV,CAAjB;AACH;AARL;AAAA;AAAA;AAAA;AAAA,YAFJ,eAaI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEZ,kBAAkB,CAACF,GAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ,eAcI;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,YAdJ,EAgBKH,cAAc,CAACiB,GAAf,CAAoBC,GAAD,IAAO;AACvB,0BACI;AAAA,+BACI;AAAA,kCACI;AAAA,kCAAaA,GAAG,CAACC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,uCAAkBD,GAAG,CAACE,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,uCAAkBF,GAAG,CAACG,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA,8CAAyBH,GAAG,CAACI,kBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,SAAUJ,GAAG,CAACK,EAAd;AAAA;AAAA;AAAA;AAAA,cADJ;AAWH,KAZA,CAhBL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAxBa,CA4DjB;AAGH,CA/DD;;GAAM1B,M;;KAAAA,M;AAiEN,eAAeA,MAAf","sourcesContent":["import \"./App.css\";\nimport axios from \"axios\";\nimport {useState} from \"react\";\n\n\nconst Search = () => {\n    const [ingredientName, setIngredientName] = useState(\"\");\n    const [matchedRecipes, setMatchedRecipes] = useState([]);\n\n    //added code from here\n    let ing = \"\";\n    let ingredientArr = \"\";\n    const userIngredientList = (user_ingredient) => {\n        ingredientArr = user_ingredient;\n        console.log(ingredientArr)\n    }\n    //end here\n\n   \n    const submitIngredient = async (e) => {\n        e.preventDefault();\n        await axios.post('http://localhost:3001/api/post', {\n            ingredientName: ingredientName\n        }).then(\n            (response) => setMatchedRecipes(response.data)\n            )\n    }\n  \n    \n        return( \n            <form className = \"search_form\" onSubmit={submitIngredient}>\n                <label>Search Bar</label>\n                <input\n                    type=\"text\"\n                    placeholder=\"type your ingredient\"\n                    name=\"ingredientName\"\n                    onChange={ (e)=> {\n                        //console.log(e.target.value)\n                        ing = e.target.value;\n                        setIngredientName(e.target.value)\n                    }}\n                    \n                />\n                <button type=\"submit\" onClick={userIngredientList(ing)}>Search</button>\n                <h1>{ingredientArr}</h1>\n                {/*return a component*/}\n                {matchedRecipes.map((val)=>{\n                    return(\n                        <div key={val.id}>\n                            <ul >\n                                <li >Title: {val.title}</li>\n                                <li >Ingredient: {val.ingredients}</li>\n                                <li >Directions: {val.directions}</li>\n                                <li >Ingredient string: {val.ingredients_string}</li>\n                            </ul>\n                        </div>\n                    )\n                    \n                })}\n                \n               \n            </form>   \n        );\n\n    \n    //})\n   \n    \n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}