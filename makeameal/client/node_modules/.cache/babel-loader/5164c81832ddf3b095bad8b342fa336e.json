{"ast":null,"code":"var _jsxFileName = \"/Users/jinxlin/Desktop/hunter2021spring/summer499/makeameal/makeameal/client/src/search.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const [ingredientName, setIngredientName] = useState(\"\");\n  const [matchedRecipes, setMatchedRecipes] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:3001/api/get').then(response => {\n      console.log(response.data);\n      setMatchedRecipes(response.data);\n    });\n  }, []);\n\n  const submitIngredient = () => {\n    axios.post('http://localhost:3001/api/post', {\n      ingredientName: ingredientName\n    }).then(() => {\n      alert('ingredient sent');\n    });\n  };\n  /*\n  //send data to server\n  async function submitIngredient(e){\n      e.preventDefault();\n      try{\n          \n          await axios.post('http://localhost:3001/api/post',\n             { ingredientName: ingredientName });\n             //console.log(response);\n      }catch(err){\n          console.error(err);\n      }\n  }\n  */\n  //get data from server\n  //useEffect(() => {\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"search_form\",\n    onSubmit: submitIngredient,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Search Bar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"type your ingredient\",\n      name: \"ingredientName\",\n      onChange: e => {\n        setIngredientName(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), matchedRecipes.map(val => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Title: \", val.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Ingredient: \", val.ingredients]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Directions: \", val.directions]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 13\n  }, this); //})\n\n  /*return( \n      <form className = \"search_form\" onSubmit={submitIngredient}>\n          <label>Search Bar</label>\n          <input\n              type=\"text\"\n              placeholder=\"type your ingredient\"\n              name=\"ingredientName\"\n              onChange={ (e)=> {\n                  setIngredientName(e.target.value)\n              }}\n              \n          />\n          <button type=\"submit\">Search</button>\n          \n      </form>\n      \n  )*/\n};\n\n_s(Search, \"p9mbIAkXgnoXVmVeegL8O/W3/dU=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/jinxlin/Desktop/hunter2021spring/summer499/makeameal/makeameal/client/src/search.js"],"names":["axios","useState","useEffect","Search","ingredientName","setIngredientName","matchedRecipes","setMatchedRecipes","get","then","response","console","log","data","submitIngredient","post","alert","e","target","value","map","val","title","ingredients","directions"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCJ,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACK,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,EAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACXF,IAAAA,KAAK,CAACQ,GAAN,CAAU,+BAAV,EAA2CC,IAA3C,CAAiDC,QAAD,IAAY;AACxDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAN,MAAAA,iBAAiB,CAACG,QAAQ,CAACG,IAAV,CAAjB;AACH,KAHD;AAIH,GALQ,EAKN,EALM,CAAT;;AAMA,QAAMC,gBAAgB,GAAG,MAAM;AAC1Bd,IAAAA,KAAK,CAACe,IAAN,CAAW,gCAAX,EAA6C;AAC1CX,MAAAA,cAAc,EAAEA;AAD0B,KAA7C,EAEEK,IAFF,CAEO,MAAM;AACVO,MAAAA,KAAK,CAAC,iBAAD,CAAL;AACH,KAJA;AAKJ,GAND;AAOA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;;;AAKI,sBACI;AAAM,IAAA,SAAS,EAAG,aAAlB;AAAgC,IAAA,QAAQ,EAAEF,gBAA1C;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,sBAFhB;AAGI,MAAA,IAAI,EAAC,gBAHT;AAII,MAAA,QAAQ,EAAIG,CAAD,IAAM;AACbZ,QAAAA,iBAAiB,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;AACH;AANL;AAAA;AAAA;AAAA;AAAA,YAFJ,eAWI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,EAYKb,cAAc,CAACc,GAAf,CAAoBC,GAAD,IAAO;AACvB,0BACI;AAAA,+BACI;AAAA,kCACI;AAAA,kCAAaA,GAAG,CAACC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,uCAAkBD,GAAG,CAACE,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,uCAAkBF,GAAG,CAACG,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAUH,KAXA,CAZL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CArCa,CAkEjB;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC,CArFD;;GAAMrB,M;;KAAAA,M;AAuFN,eAAeA,MAAf","sourcesContent":["import \"./App.css\";\nimport axios from \"axios\";\nimport {useState, useEffect} from \"react\";\n\n\nconst Search = () => {\n    const [ingredientName, setIngredientName] = useState(\"\");\n    const [matchedRecipes, setMatchedRecipes] = useState([]);\n\n    useEffect(()=> {\n        axios.get('http://localhost:3001/api/get').then((response)=>{\n            console.log(response.data)\n            setMatchedRecipes(response.data)\n        })\n    }, [])\n    const submitIngredient = () => {\n         axios.post('http://localhost:3001/api/post', {\n            ingredientName: ingredientName\n        }).then(() => {\n            alert('ingredient sent');\n        })\n    }\n    /*\n    //send data to server\n    async function submitIngredient(e){\n        e.preventDefault();\n        try{\n            \n            await axios.post('http://localhost:3001/api/post',\n               { ingredientName: ingredientName });\n               //console.log(response);\n        }catch(err){\n            console.error(err);\n        }\n    }\n    */\n    //get data from server\n    //useEffect(() => {\n\n    \n       \n\n        return( \n            <form className = \"search_form\" onSubmit={submitIngredient}>\n                <label>Search Bar</label>\n                <input\n                    type=\"text\"\n                    placeholder=\"type your ingredient\"\n                    name=\"ingredientName\"\n                    onChange={ (e)=> {\n                        setIngredientName(e.target.value)\n                    }}\n                    \n                />\n                <button type=\"submit\">Search</button>\n                {matchedRecipes.map((val)=>{\n                    return(\n                        <div>\n                            <ul>\n                                <li >Title: {val.title}</li>\n                                <li >Ingredient: {val.ingredients}</li>\n                                <li >Directions: {val.directions}</li>\n                            </ul>\n                        </div>\n                    )\n                    \n                })}\n            </form>   \n        );\n\n    \n    //})\n    /*return( \n        <form className = \"search_form\" onSubmit={submitIngredient}>\n            <label>Search Bar</label>\n            <input\n                type=\"text\"\n                placeholder=\"type your ingredient\"\n                name=\"ingredientName\"\n                onChange={ (e)=> {\n                    setIngredientName(e.target.value)\n                }}\n                \n            />\n            <button type=\"submit\">Search</button>\n            \n        </form>\n        \n    )*/\n    \n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}